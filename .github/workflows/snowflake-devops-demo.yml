name: sf-devops-script-deployment	


# Controls when the action will run.


on:
 # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - DEV
      - QA

    paths:
      - 'migrations/**' # location

  workflow_dispatch:

jobs:
  deploy-Snowflake-changes-job:

    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch 
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1

        with:
          python-version: 3.8.x

      - name: Run schemachange for DEV

        if: ${{ steps.extract_branch.outputs.branch == 'DEV' }}
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.DEV_SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          BRANCH_NAME_FOR_CONFIG: ${{ steps.extract_branch.outputs.branch }}

        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange==3.7.0

          echo "Printing secrets"
          echo $SF_ACCOUNT 
          echo $SF_USERNAME
          echo $SF_ROLE 
          echo $SF_WAREHOUSE 
          echo $SF_DATABASE 
          echo $SNOWFLAKE_PASSWORD 

          echo "Step 2: Running schemachange"

          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d DEV_INGESTION_DB -c $DEV_SF_DATABASE.SCHEMACHANGE_DEV.CHANGE_HISTORY --create-change-history-table

      - name: Run schemachange = QA

        if: ${{ steps.extract_branch.outputs.branch == 'QA' }}
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.QA_SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          BRANCH_NAME_FOR_CONFIG: ${{ steps.extract_branch.outputs.branch }} 

        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange==3.7.0

          echo "Printing secrets"
          echo $SF_ACCOUNT 
          echo $SF_USERNAME
          echo $SF_ROLE 
          echo $SF_WAREHOUSE 
          echo $SF_DATABASE 
          echo $SNOWFLAKE_PASSWORD
          echo "Step 2: Running schemachange"
      
          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $QA_SF_DATABASE -c $QA_SF_DATABASE.SCHEMACHANGE_QA.CHANGE_HISTORY --create-change-history-table


      - name: Run schemachange PRD

        if: ${{ steps.extract_branch.outputs.branch == 'main' }}

        env:

          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.PRD_SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }} 

          BRANCH_NAME_FOR_CONFIG: ${{ steps.extract_branch.outputs.branch }}       

        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
      
          echo "Step 1: Installing schemachange"

          pip install schemachange==3.7.0   


          echo "Printing secrets"
          echo $SF_ACCOUNT 
          echo $SF_USERNAME
          echo $SF_ROLE 
          echo $SF_WAREHOUSE 
          echo $SF_DATABASE 
          echo $SNOWFLAKE_PASSWORD
          
          echo "Step 2: Running schemachange"

          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d DEV_SF_DATABASE -c $PRD_SF_DATABASE.SCHEMACHANGE_PRD.CHANGE_HISTORY --create-change-history-table

